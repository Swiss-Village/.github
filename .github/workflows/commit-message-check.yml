name: Commit message and PR title checks

on:
  pull_request:
    types: [opened, edited, synchronize]
  push:
    branches:
      - main

jobs:
  validate-commit-messages:
    name: Commit message and PR title checks

    on:
      pull_request:
        types: [opened, edited, synchronize]
      push:
        branches:
          - main

    jobs:
      validate-commit-messages:
        runs-on: ubuntu-latest
        steps:
          - name: Checkout (full history)
            uses: actions/checkout@v4
            with:
              fetch-depth: 0

          - name: Install commit-msg hook from repo
            run: |
              if [ -f conventions/hooks/commit-msg ]; then
                mkdir -p .git/hooks
                cp conventions/hooks/commit-msg .git/hooks/commit-msg
                chmod +x .git/hooks/commit-msg
                echo "Installed .git/hooks/commit-msg from conventions/hooks/commit-msg"
              else
                echo "conventions/hooks/commit-msg not found in repository; cannot install hook." >&2
                exit 1
              fi

          - name: Validate PR title (using installed hook)
            if: ${{ github.event_name == 'pull_request' }}
            run: |
              set -euo pipefail
              echo "${{ github.event.pull_request.title }}" > /tmp/commit_msg.txt
              echo "Checking PR title: $(cat /tmp/commit_msg.txt)"
              .git/hooks/commit-msg /tmp/commit_msg.txt

          - name: Validate commit messages in range (using installed hook)
            run: |
              set -euo pipefail

              if [ "${{ github.event_name }}" = "pull_request" ]; then
                base_sha="${{ github.event.pull_request.base.sha }}"
                head_sha="${{ github.event.pull_request.head.sha }}"
                # List commit SHAs in the PR (exclude merges)
                shas=$(git rev-list --no-merges $base_sha..$head_sha || true)
              else
                # On push, check the last 50 non-merge commits reachable from HEAD
                shas=$(git rev-list --no-merges --max-count=50 HEAD || true)
              fi

              if [ -z "${shas}" ]; then
                echo "No commits to check."
                exit 0
              fi

              echo "Checking commit SHAs:"
              echo "$shas"

              for sha in $shas; do
                git show -s --format=%B $sha > /tmp/commit_msg.txt
                first_line=$(sed -n '1p' /tmp/commit_msg.txt)
                echo "Checking commit $sha: $first_line"
                .git/hooks/commit-msg /tmp/commit_msg.txt
              done

              echo "All commit messages and PR title (if present) follow the convention."
